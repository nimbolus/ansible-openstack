- name: setup controller
  include_tasks: controller.yml
  when: is_controller_node

- name: install controller
  package:
    name:
      - openstack-octavia-api
      - openstack-octavia-ui
      - openstack-octavia-diskimage-create
      - debootstrap
      - "{{'python' if ansible_distribution_major_version|int < 8 else 'python3'}}-octaviaclient"
    state: "{{package_state | default('present')}}"
  notify:
    - init octavia db
    - restart octavia-api
    - restart httpd
  when: is_controller_node

- name: install worker
  package:
    name:
      - openstack-octavia-health-manager
      - openstack-octavia-housekeeping
      - openstack-octavia-worker
      - "{{'python' if ansible_distribution_major_version|int < 8 else 'python3'}}-octaviaclient"
      - bridge-utils
      - dhcp-client
    state: "{{package_state | default('present')}}"
  notify:
    - restart octavia-health-manager
    - restart octavia-housekeeping
    - restart octavia-worker
  when: is_network_node and octavia_worker

- name: create management network
  include_tasks: network.yml
  when: is_controller_node

- name: create ports
  include_tasks: port.yml
  when: is_network_node and octavia_worker

- name: create amphora server ca
  include_role:
    name: ca
    tasks_from: create_ca.yml
  vars:
    ca_dir: "{{octavia_amphora_ca_dir}}"
    ca_organization_unit_name: Octavia Amphora
    ca_owner: octavia
    ca_key_passphrase: "{{octavia_amphora_ca_key_passphrase}}"
  when: is_network_node and octavia_worker

- name: request certificate for worker
  include_role:
    name: ca
    tasks_from: req_cert.yml
  vars:
    req_name: octavia
    req_common_name: "{{ansible_nodename}}"
    req_owner: octavia
    req_group: octavia
    req_post_command: systemctl restart octavia-health-manager octavia-housekeeping octavia-worker
    req_create_bundle: true
    req_notify:
      - restart octavia-health-manager
      - restart octavia-housekeeping
      - restart octavia-worker
  when: is_network_node and octavia_worker

- name: configure
  template:
    src: octavia.conf.j2
    dest: /etc/octavia/octavia.conf
    backup: true
  notify:
    - init octavia db
    - restart octavia-api
    - restart octavia-health-manager
    - restart octavia-housekeeping
    - restart octavia-worker
  when: is_controller_node or
        (is_network_node and octavia_worker)

- name: flush handlers
  meta: flush_handlers

- name: start and enable controller
  systemd:
    name: octavia-api
    state: started
    enabled: true
  when: is_controller_node

- name: start and enable worker
  systemd:
    name: "{{item}}"
    state: started
    enabled: true
  loop:
    - octavia-interface
    - octavia-worker
    - octavia-housekeeping
    - octavia-health-manager
  when: is_network_node and octavia_worker
