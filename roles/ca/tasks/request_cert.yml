# this can be called by other roles to create their certificates
# following variables must be defined:
#   req_name
#   req_common_name
#   req_owner (defaults to req_name)
#   req_group (defaults to req_name)
#   req_post_command (defaults to null)
#   req_notify (defaults to null)
#   req_subject_alt_name (defaults to null)
#   req_create_bundle (defaults to False) - creates a combined private key and certificate file
#   req_override_privatekey_path (optional)
#   req_override_cert_path (optional)
#   req_override_bundle_path (optional)
#   req_override_ca_cert_path (optional)

- vars:
    default_privatekey_path: "{{ca_dir}}/private/{{req_common_name}}_{{req_name}}.key"
    default_csr_path: "{{ca_dir}}/csr/{{req_common_name}}_{{req_name}}.csr"
    default_cert_path: "{{ca_dir}}/certs/{{req_common_name}}_{{req_name}}.crt"
    default_bundle_path: "{{ca_dir}}/certs/{{req_common_name}}_{{req_name}}.bundle"
    privatekey_path: "{{req_override_privatekey_path | default(default_privatekey_path)}}"
    csr_path: "{{(req_override_cert_path + '.csr') if req_override_cert_path is defined else default_csr_path}}"
    cert_path: "{{req_override_cert_path | default(default_cert_path)}}"
    bundle_path: "{{req_override_bundle_path | default(default_bundle_path)}}"
    ca_cert_path: "{{ca_dir}}/certs/ca.crt"
    fact_key: "{{req_fact_key | default(((ca_dir | basename) + '_' + req_name) | replace('-', '_'))}}"
  block:
    - name: "create private key for {{req_name}}"
      openssl_privatekey:
        path: "{{privatekey_path}}"
        type: RSA
        size: 4096
        owner: "{{req_owner | default(req_name)}}"
        group: "{{req_group | default(req_name)}}"
        mode: 0600
      notify: "{{req_notify | default(null)}}"

    - name: "create certificate signing request for {{req_name}}"
      openssl_csr:
        path: "{{csr_path}}"
        privatekey_path: "{{privatekey_path}}"
        common_name: "{{req_common_name}}"
        country_name: "{{ca_country_name}}"
        organization_name: "{{ca_organization_name}}"
        organizational_unit_name: "{{ca_organization_unit_name}} {{req_name}}"
        email_address: "{{ca_email_address}}"
        subject_alt_name: "{{req_subject_alt_name | default([])}}"

    - name: "fetch certificate signing request for {{req_name}}"
      slurp:
        path: "{{csr_path}}"
      register: req_csr

    - name: "upload certificate signing request for {{req_name}}"
      copy:
        content: "{{req_csr.content | b64decode}}"
        dest: "{{ca_dir}}/csr/{{req_common_name}}_{{req_name}}.csr"
      delegate_to: "{{ca_host}}"

    - name: "create certificate for {{req_name}}"
      openssl_certificate:
        path: "{{ca_dir}}/certs/{{req_common_name}}_{{req_name}}.crt"
        csr_path: "{{ca_dir}}/csr/{{req_common_name}}_{{req_name}}.csr"
        provider: ownca
        selfsigned_not_after: +720d
        ownca_path: "{{ca_cert_path}}"
        ownca_privatekey_passphrase: "{{ca_key_passphrase}}"
        ownca_privatekey_path: "{{ca_key_path}}"
      delegate_to: "{{ca_host}}"

    - name: "fetch certificate for {{req_name}}"
      slurp:
        path: "{{ca_dir}}/certs/{{req_common_name}}_{{req_name}}.crt"
      register: req_cert
      delegate_to: "{{ca_host}}"

    - name: "upload certificate for {{req_name}}"
      copy:
        content: "{{req_cert.content | b64decode}}"
        dest: "{{cert_path}}"
        owner: "{{req_owner | default(req_name)}}"
        group: "{{req_group | default(req_name)}}"
      notify: "{{req_notify | default(null)}}"

    - name: "fetch ca certificate for {{req_name}}"
      slurp:
        path: "{{ca_cert_path}}"
      register: req_ca_cert
      when: req_override_ca_cert_path is defined
      delegate_to: "{{ca_host}}"

    - name: "upload ca certificate for {{req_name}}"
      copy:
        content: "{{req_ca_cert.content | b64decode}}"
        dest: "{{req_override_ca_cert_path}}"
        owner: root
        group: root
      when: req_override_ca_cert_path is defined
      notify: "{{req_notify | default(null)}}"

    - name: "fetch private key for {{req_name}}"
      slurp:
        path: "{{privatekey_path}}"
      register: req_privatekey
      when: req_create_bundle | default(false)

    - name: "create certificate bundle for {{req_name}}"
      copy:
        content: |
          {{req_privatekey.content | b64decode}}
          {{req_cert.content | b64decode}}
        dest: "{{bundle_path}}"
        owner: "{{req_owner | default(req_name)}}"
        group: "{{req_group | default(req_name)}}"
        mode: 0600
      when: req_create_bundle | default(false)

    - name: "set facts for {{req_name}}"
      set_fact:
        {
          "{{fact_key}}":
            {
              "privatekey_path": "{{privatekey_path}}",
              "cert_path": "{{cert_path}}",
              "bundle_path": "{{bundle_path}}",
              "ca_cert_path": "{{ca_cert_path}}",
            },
        }
