- name: install
  package:
    name:
      - openstack-cinder
      - "{{'python' if ansible_distribution_major_version|int < 8 else 'python3'}}-keystone"
    state: "{{package_state |Â default('present')}}"
  notify:
    - init cinder db
    - restart cinder-api
    - restart cinder-scheduler
    - restart cinder-volume
    - restart cinder-backup
  when: is_block_storage_node or is_controller_node

- name: configure controller
  import_tasks: controller.yml
  when: is_controller_node

- name: configure
  template:
    src: cinder.conf.j2
    dest: /etc/cinder/cinder.conf
    backup: true
  notify:
    - init cinder db
    - restart cinder-api
    - restart cinder-scheduler
    - restart cinder-volume
    - restart cinder-backup
  when: is_block_storage_node or is_controller_node

- name: configure backend
  include_tasks: "backends/{{backend}}.yml"
  when: is_block_storage_node or is_compute_node
  loop: "{{cinder_backends}}"
  loop_control:
    loop_var: backend

- name: configure backup
  include_tasks: backup/{{cinder_backup_driver}}.yml
  when: is_block_storage_node and cinder_backup_driver

- name: flush handlers
  meta: flush_handlers

- name: start and enable api and scheduler service
  systemd:
    name: "{{item}}"
    enabled: true
    state: started
  loop:
    - openstack-cinder-api
    - openstack-cinder-scheduler
  when: is_controller_node

- name: start and enable volume service
  systemd:
    name: openstack-cinder-volume
    enabled: true
    state: started
  when: is_block_storage_node

- name: start and enable backup service
  systemd:
    name: openstack-cinder-backup
    enabled: true
    state: started
  when: is_block_storage_node
        and cinder_backup_driver
