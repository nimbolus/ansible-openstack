# {{ansible_managed}}

[DEFAULT]
enabled_apis = osapi_compute,metadata
transport_url = rabbit://{{nova_rabbitmq_user}}:{{nova_rabbitmq_user_password}}@{{rabbitmq_host}}
my_ip = {{nova_ip_address}}
use_neutron = true
firewall_driver = nova.virt.firewall.NoopFirewallDriver
allow_resize_to_same_host = True
block_device_allocate_retries = 150
max_local_block_devices = -1
{% if is_controller_node %}
ssl_only = true
cert = {{ req_cert_path }}
key = {{ req_privatekey_path }}
{% endif %}

[api]
auth_strategy = keystone

{% if is_controller_node %}
[api_database]
connection = mysql+pymysql://nova:{{nova_db_user_password}}@{{db_host}}/nova_api

[database]
connection = mysql+pymysql://nova:{{nova_db_user_password}}@{{db_host}}/nova

[cinder]
os_region_name = RegionOne
{% endif %}

[glance]
api_servers = {{glance_url}}

[keystone_authtoken]
auth_url = {{keystone_url}}/v3
memcached_servers = {{memcached_host}}:11211
auth_type = password
project_domain_name = Default
user_domain_name = Default
project_name = service
username = nova
password = {{nova_user_password}}

[neutron]
url = {{neutron_url}}
auth_type = password
auth_url = {{keystone_url}}
project_name = service
project_domain_name = default
username = neutron
user_domain_name = default
password = {{nova_neutron_user_password}}
region_name = RegionOne
{% if is_controller_node %}
service_metadata_proxy = true
metadata_proxy_shared_secret = {{nova_metadata_secret}}
{% endif %}

[oslo_concurrency]
lock_path = /var/lib/nova/tmp

[placement]
auth_type = password
auth_url = {{keystone_url}}/v3
project_name = service
project_domain_name = Default
user_domain_name = Default
username = placement
password = {{nova_placement_user_password}}
region_name = RegionOne

[vnc]
enabled = true
server_proxyclient_address = $my_ip
{% if is_controller_node %}
server_listen = $my_ip
{% elif is_compute_node %}
novncproxy_base_url = {{nova_novnc_url}}/vnc_auto.html
server_listen = 0.0.0.0

[libvirt]
cpu_mode = {{nova_libvirt_cpu_mode}}
{% if nova_libvirt_cpu_model_extra_flags %}
cpu_model_extra_flags = {{nova_libvirt_cpu_model_extra_flags}}
{% endif %}
{% if nova_ephemeral_storage_backend == 'rbd' %}
images_type = rbd
images_rbd_pool = {{nova_rbd_pool}}
images_rbd_ceph_conf = {{nova_rbd_ceph_conf}}
rbd_user = {{nova_rbd_user}}
rbd_secret_uuid = {{nova_rbd_secret_uuid}}
{% endif %}
{% endif %}
