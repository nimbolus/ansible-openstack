# {{ansible_managed}}

[ml2]
type_drivers = flat,vlan,vxlan,local
tenant_network_types = vxlan
mechanism_drivers = linuxbridge,l2population{% if neutron_sriov %},sriovnicswitch{% endif %}

extension_drivers = port_security{% for d in neutron_ml2_extension_drivers %},{{d}}{% endfor %}

{% if neutron_path_mtu %}
path_mtu = {{neutron_path_mtu}}
{% endif %}

{% set all_flat_networks = groups.network_nodes | map('extract', hostvars) | selectattr('neutron_provider_flat_networks', 'defined') | map(attribute='neutron_provider_flat_networks') | flatten | groupby('name') %}
{% set all_vlan_networks = groups.network_nodes | map('extract', hostvars) | selectattr('neutron_provider_vlan_networks', 'defined') | map(attribute='neutron_provider_vlan_networks') | flatten | groupby('name') %}
{% if all_flat_networks | length > 0 %}
[ml2_type_flat]
flat_networks = {% for n in all_flat_networks %}{{n[1][0]['name']}}{% if not loop.last %},{% endif %}{% endfor %}

{% endif %}

[ml2_type_vxlan]
vni_ranges = 1:1000

{% if all_vlan_networks | length > 0 %}
[ml2_type_vlan]
network_vlan_ranges = {% for n in all_vlan_networks %}{{n[1][0]['name']}}{% if 'vlan_range' in n[1][0] %}:{{n[1][0]['vlan_range']}}{% endif %}{% if not loop.last %},{% endif %}{% endfor %}

{% endif %}

[securitygroup]
enable_ipset = true
